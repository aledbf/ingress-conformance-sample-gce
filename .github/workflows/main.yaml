name: Conformance

on:
#  schedule:
#    - cron: '0 */12 * * *'
  push:
    branches:
      - master

jobs:

  conformance:
    runs-on: ubuntu-latest

    env:
      INGRESS_CLASS: ${{ secrets.INGRESS_CLASS }}
      INGRESS_CONTROLLER: ${{ secrets.INGRESS_CONTROLLER }}
      CONTROLLER_VERSION: ${{ secrets.CONTROLLER_VERSION }}
      RUN_REGION: us-central1
      KUBERNETES_PROVIDER: gce
      KUBE_GCE_ZONE: us-central1-c
      KUBE_VERSION: v1.19.0-rc.4
      NUM_NODES: 1
      PREEMPTIBLE_MASTER: true
      PREEMPTIBLE_INSTANCES: true

    steps:

      # Setup gcloud CLI
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '275.0.0'
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      # Configure gcloud CLI
      - name: gcloud Set up
        run: |
          gcloud config set run/region $RUN_REGION
          gcloud components install beta
          gcloud components install alpha

      - name: Prepare environment
        run: |
          curl -sS https://get.k8s.io | bash
          cd kubernetes
          cluster/kube-down.sh || true
          cluster/kube-up.sh

          sleep 120

          kubectl create clusterrolebinding $(whoami) --clusterrole=cluster-admin --user=$(gcloud config get-value core/account) || true

      - name: Checkout
        uses: actions/checkout@v1

      - name: Prepare environment
        run: |
          sudo bash -c 'curl -sSL https://github.com/vmware-tanzu/sonobuoy/releases/download/v0.18.4/sonobuoy_0.18.4_linux_amd64.tar.gz | tar xvz -C /usr/local/bin/ sonobuoy'
          # optional step to cleanup the generated HTML
          sudo bash -c 'apt update && apt install -y tidy'

      - name: Run conformance tests
        run: |
          kubectl delete namespace sonobuoy || true
          .github/conformance.sh

      - name: Generate reports
        run: |
          # clone the gh-pages repository branch
          export TEMP_WORKTREE=$(mktemp -d)
          remote_repo="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"
          git clone --branch=gh-pages --depth=1 "${remote_repo}" "${TEMP_WORKTREE}"

          .github/generate-reports.sh

      - name: Upload cucumber json files
        uses: actions/upload-artifact@v2
        with:
          name: cucumber-output
          path: /tmp/reports/*
